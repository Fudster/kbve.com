[{"id":"api.mdx","slug":"api","body":"import Github from \"@c/Action/Github/Github.astro\";\nexport const components = { github: Github };\n\n## Docs\n\n- Official documentation will be provided for the API, we are currently going to base the API off of Strapi.\n\n* * *\n\n## Install\n\n- To help scale the API backend, we are also currently developing the backend cluster of both the API and the database that stores the information (MariaDB).\n    - Current Docker Compose for ve2\n        <Github src=\"data/api/ve2/docker-compose.yml\" description=\"This is the current docker compose for a ve2 that runs our API.\" />\n\n* * * \n\n## Uptime\n- ![API Uptime Badge](https://api.checklyhq.com/v1/badges/checks/206925a6-0f7b-4669-a4fd-b61b3f5b70fc?style=for-the-badge&theme=default&responseTime=true)\n\n* * *\n\n\n## Auth\n- Auth Journal \n  - For the core of the API, we will use JWT as the `key` in between the $User and $API.\n- React JSX\n  - The first mod will be the core auth system between the client $User and server $API, which includes the register and login. While we build it out, we will include generic defensive components into the foundation, then re-visit and apply external security, such as limits and firewalls (some may operate outside of the API).\n    - Cookie Storage (of the JWT)\n      - Cookie - `token` - will store the client $User JWT.\n      - Cookie - `user` - will store the client $User data.\n      - Library: `react-cookie` will be used to help maintain the cookies.\n\n* * *\n\n### Goal\n\nThe API is an unique construct that extends outside of the norm.","collection":"project","data":{"id":4,"layout":"../../layouts/theme/mdx.astro","title":"API","client":"Self","frontpage":true,"publishDate":"2020-03-02T00:00:00.000Z","img":"https://images.unsplash.com/photo-1658874919865-35bb32505edc?fit=crop&w=1400&h=700&q=75","description":"KBVE API - Central API for KBVE Projects.","tags":["design","dev","branding"],"repo":"kbve/api.kbve.com"}},{"id":"ar.mdx","slug":"ar","body":"\n## TO:DO - \n\n## Glasses\n\n- Nreal Air AR Glasses + SDK Notes have to be added.","collection":"project","data":{"id":1,"layout":"../../layouts/theme/mdx.astro","title":"AR","client":"Self","category":"API","frontpage":true,"status":true,"publishDate":"2021-09-07T00:00:00.000Z","date":"11/11/2022","author":"h0lybyte","img":"https://images.unsplash.com/photo-1550052558-11de18b04282?fit=crop&w=1400&h=700&q=75","description":"AR Project for KBVE","tags":["design","dev","ar","vr"]}},{"id":"discord-sh.mdx","slug":"discord-sh","body":"\n## Discord.sh\n\nDiscord.sh is our first KBVE service that aims to help","collection":"project","data":{"id":5,"layout":"../../layouts/theme/mdx.astro","title":"Discord.sh","client":"Self","category":"Project","frontpage":true,"publishDate":"2021-10-02T00:00:00.000Z","img":"https://images.unsplash.com/photo-1614680376739-414d95ff43df?fit=crop&w=1400&h=700&q=75","description":"Discord.SH | A Discord Server List, Discord Topsite, Player Reward System and Bot Project.","tags":["design","dev","branding"]}},{"id":"galaxia.mdx","slug":"galaxia","body":"import Github from \"@c/Action/Github/Github.astro\";\nexport const components = { github: Github };\n\n## Information\n\n- Our current project is Galaxia, which will be an open source cluster-ready API that extends out to various projects. When working on Discord.sh, we decided that it would make sense to build an all-in-one / hyper scalable API.\n\n\n## Micro\n\n- This is a general write-up on the micro-services within Galaxia. We should isolate parts of the `API` into small entities that can help us scale faster at a production level. Before entering into a development phase, it would be wise to get a general sense of how we would want to implement the services and their isolation.\n\n- ### Profile\n\n  - The module of `user` should consist of three components, `register`, `login` and `profile`.\n  - Entity : Register - This entity would function to take `{$username}`, `{$email}`, `{$password}` and create a data block for the user.\n    - The encryption for the `{$password}` would be a hash, most likely a b_crypt.\n  - Entity : Login - This entity would function to verify , log the user in and return a JWT token that would represent the user.\n  - Entity : Profile - Verify the JWT token is valid and then return the generic user information. Part of this function would be to expand on what exact information should be returned.\n\n- ### Dev\n\n  - There will be a splinter approach to resolving this profile concept, with a multi pipeline approach. We will continuously make sure our module(s) work at a `production` level and expand its usage within multiple languages (Javascript, Flutter, Rust, C#) but also improve the underlying methodology. The goal is that we want the `$client` to operate at the `user` level throughout various applications, website, apps, games. Further more we want to look for ways to improve the performance and security of on the various applications.\n\n- ### Map\n\n  - Core: `https://{$component}.{$module}.{$domain}.{$tld}`\n    - POC: `https://register.user.kbve.com` - Would be the official front-facing digital location for action of registering.\n  - User Mod\n    - Register: `https://register.user.kbve.com/`\n      - Short Hand URL: `https://r.u.kbve.com/`\n    - Login: `https://login.user.kbve.com/`\n      - Short Hand URL: `https://l.u.kbve.com/`\n    - Profile: `https://profile.user.kbve.com/`\n      - Short Hand URL: `https://p.u.kbve.com/`\n    - SSO: `https://sso.user.kbve.com`\n      - Short Hand URL: `https://s.u.kbve.com/`\n    - JWT: `https://jwt.user.kbve.com`\n      - Short Hand URL: `https://j.u.kbve.com/`\n    - WebSocket: `https://ws.u.kbve.com/`\n    - Net: `https://net.u.kbve.com/`\n    - DNS: `https://dns.u.kbve.com/`\n\n\n## Install\n- Install using the docker compose.\n  -  <Github src=\"data/galaxia/docker-compose.yml\" description=\"This is the current docker compose for Galaxia\" />\n\n## Notes","collection":"project","data":{"id":2,"layout":"../../layouts/theme/mdx.astro","title":"Galaxia","client":"Self","category":"API","frontpage":true,"status":true,"publishDate":"2021-09-07T00:00:00.000Z","date":"10/1/2022","author":"h0lybyte","img":"https://images.unsplash.com/photo-1444703686981-a3abbc4d4fe3?fit=crop&w=1400&h=700&q=75","description":"Galaxia is an open source cluster-ready api.","tags":["design","dev","api"]}},{"id":"roguejester.mdx","slug":"roguejester","body":"\n## RJ Project\n\n\n## Ideas\n\n• Get Unity Assets for Robots NPC Bosses etc(low poly)\n• Add more levels to the game\n• Creating Levels (need ideas what kinda of levels and what assets to use)\n• Borderlands is the TO-GO game\n• Improving AI( adding new state machines to the game so enemies are more interesting)\n• Boss Fights\n• Game is in space We use Space SkyBox\n• Leveling Up System(MAX HP increases when player levels up)\n• Talent Tree(TBD)\n• Add MiniMap(UI)\n• Upgrade System(Upgrade Weapons)\n• New Weapons Added\n• New Classes Added(Each class got unique ability)\n• SFX GunShots(NO BGX)\n\n## TODO\n\n- [x] ~Create `Concept` Issue Ticket~\n- [x] ~RogueJester - (init) - Start the initialization of RogueJester~\n- [x] ~Map out the ideas~\n- [x] Update SkyBox\n- [ ] h0lybyte: Integrate the React with Unity\n- [x] Player Level Up System(max level TBD)\n- [x] HP Getting Upgraded on Level\n- [x] Added Currency inside game(killed enemies drop currency)\n- [x] Currency is saved trought out scene\n- [ ] Added + 2 more levels(total levels 4)\n- [x] User Interface all the values are displayed on the screen or in the menu\n- [x] Main Menu (Modern Menu Designed)much more fun to interact with!\n- [x] LoginSceneDesign\n- [x] MainSceneDesign\n- [x] InGameMenu design and functionality\n- [x] Scaling UI in game for all devices\n- [x] Level SelectionScene and Functionality\n- [x] SceneFlow\n- [ ] Enemy Ai Improved\n- [ ] Upgrade System\n- [ ] Boss Fight\n- [ ] When player drops down he doesent die. Game needs to reset.\n- [ ] Mobile Controls movement adopted for android\n- [ ] Re-design Menu(so responsive for more platforms)\n- [ ] Move Gameplay Actions into Button for android usage\n- [ ] Displaying Stats in the game panel (TBD)\n- [ ] Inventory System\n- [ ] When player dies he loses items that he bring with him\n- [ ] Main Menu Inventory(player select what items to bring for the next level)\n- [ ] Inventory data values stored in JSON\n- [ ] New vfx for weapons\n- [ ] InventoryDisplaying in Menu\n\n## Boundary\n\n- h0lybyte: Level3\n- ZaneRage: Everything Else\n\n- Should create a header!\n\n## Journal\n\n- Collective thoughts, concepts and ideas for the RogueJester FPS.\n- Ideas How to Convert 1.  System.Text.Json namespace to convert C# objects to JSON and vice-versa.\n- Explained in this [link](https://www.tutorialsteacher.com/articles/convert-object-to-json-in-csharp#:~:text=The.NET%205%20framework%20provides%20the%20built-in%20JsonSerializer%20class,built-in%20JsonSerializer%20class%20that%20converts%20objects%20to%20JSON)\n- Thus, convert the JSON string to class object in C# using the JsonSerializer.Deserialize () method.\n\n## Scene\n\n0. LoginMenu\n1. IntroMenu\n2. WInScene\n3. LoseScene\n4. MainScene\n5. SecondaryScene\n6. LevelSelection\n7. -- null\n\n\n## Assets\n\n- This is a full breakdown of the assets that we are using in RogueJester FPS. We will keep the credits and a semi-active list of all the components that we are using.\n\n### SkyBox\n\n- SkyBox provides us with a visual background.\n- Asset: [SkyBox Vol 2](https://assetstore.unity.com/packages/2d/textures-materials/sky/skybox-volume-2-nebula-3392)\n  ZaneRage: Adding the Asset\n\n### Search\n\n- Quick [Search](https://assetstore.unity.com/?category=3d%2Fcharacters%2Frobots&free=true&orderBy=1) on the Unity Assets page for FREE* 3D Characters -> Robots\n\n### 3D Robot Solider\n\n- Official [Link](https://assetstore.unity.com/packages/3d/characters/robots/robot-soldier-142438)\n- ZaneRage: those are soo cool for enemies\n- h0lybyte: Okay, I will grab and commit them for Patch 1.2.x\n\n### UAV Trident\n\n- Official [Link](https://assetstore.unity.com/packages/3d/vehicles/space/uav-trident-46128)\n\n### Combat Drone\n\n- Official [Link](https://assetstore.unity.com/packages/3d/low-poly-combat-drone-82234)\n\n### Spider Orange\n\n- Official [Link](https://assetstore.unity.com/packages/3d/characters/robots/spider-orange-181154)\n\n### Robot Metallic Humanoid\n\n- Official [Link](https://assetstore.unity.com/packages/3d/characters/robots/robot-metallic-humanoid-171295)\n\n### Sentry 3D Robot\n\n- Official [Link](https://assetstore.unity.com/packages/3d/characters/robots/sentry-robot-222899)\n\n### Robot 3D Sphere\n\n- Official [Link](https://assetstore.unity.com/packages/3d/characters/robots/robot-sphere-136226)\n","collection":"project","data":{"id":6,"layout":"../../layouts/theme/mdx.astro","title":"Rogue Jester","client":"Self","publishDate":"2020-03-04T00:00:00.000Z","status":true,"img":"https://images.unsplash.com/photo-1603994236406-bf7f71dc361e?fit=crop&w=1400&h=700&q=75","description":"Rogue Jester is a Rogue-like FPS that we are building to learn more about Unity.","tags":["unity","unity-webgl","gaming","fps","roguejester"]}},{"id":"rsps.mdx","slug":"rsps","body":"\n# RSPS Information\n\n* * *\n* * *\n* * *\n\n# Operational Template\n\nThe operational template will be a proxmox ready template that will allow us to auto-scale deployment, including allowing the usage of Terraform and Ansible; the base of the template will be Windows 11 with Python and Java installed through the Choco package manager.\n\n## Template Download\n\nIn order to avoid legal issues, we can not offer the template with Windows, so we will have to do the setup done through Powershell. The up-to-date Powershell script will be in our VIP room and hosted in private repo.\n\n## Template Security\n\nWe recommend that you clone the first template and spin containers using the cloned QEMU virtual machine. As for saving the instance, we recommend that you take a snapshot of the instance once it is ready for production, make sure to include the RAM.\n\n* * *\n* * *\n* * *\n\n# RS\n\nThese are notes on RS specific information, including skills, mini-games and items. \n\n* * *\n\n## Skills\n\nThe primary focus of the game is to level up your skills to level 99. \n\n* * *\n\n### Combat\n\nFor combat training, we recommend with starting off at level 1 Chickens, level 2 Cows and level 3-10 Goblins, until the character reaches a total combat level of >20.\n\n* * *\n\n### Fishing\n\nFishing is a core skill that the accounts have to build, as it provides a fast and cheap form of food, income and total levels. The skill is AFK friendly, allowing multiple instances to train without a risk of death or logging out.\n\n#### Fishing lvl 1 to 20\nThe current path for fishing is level 1-20 Shrimps at Draynor and then fly fishing from 20 to 70 at the barbarian village; the village is located west of Varrock and east of Falador, following the main road.\n\n\n* * *\n\n### Cooking\n\n* * *\n\n## IP\n\nThe `IP address` for each account/session/instance is very important as to avoid chain bans and have a stable networking.\n\n\n### Mobile\n\nOne of the methods that we will be looking into would be using a mobile provider to help with the obfuscation. There are two ways that you could utilize your mobile data plan, the first would be to download the mobile application (iOS/Android) directly and log in. The second way would be to setup a mobile hotspot and then remotely \n\n### VPN\n\nVPN networks help obfuscate/hide the local IP address, thus allowing you to run multiple accounts on the same server.\n\n#### NordVPN\n\nNordVPN lets you have 6 active sessions on their service for around $14.00 a month.\n\n* * *\n* * *\n* * *\n\n# Tools\n\n## Account Ban\n\nOkay this tool would automatically check our accounts every 12 hours, to see if they were ban? \n\n* * *\n* * *\n* * *\n\n\n# Notes\n\nThis section will be for note taking and keeping track of anything else that we would want to add into the project. I think we could build an automated system that could grab the accounts and then check if there were any bans?\n\n* * *\n* * *\n* * *\n\n# Account Order\n\nKBVE Account order form is a quick and easy way to place an order through our system. There are a total of 23 skills, with 15 Free To Play/F2P skills and 8 Pay To Play / P2P skills.\n\n## Account Order Format\n\n```javascript\n\nvar HP = 10;\nvar ATTACK = 1;\nvar STRENGTH = 1;\nvar DEFENSE = 1;\nvar RANGE = 1;\nvar PRAYER = 1;\nvar MAGIC = 1;\nvar RUNECRAFT = 1;\nvar CRAFT = 1;\nvar MINING = 1;\nvar SMITHING = 1;\nvar FISHING = 1;\nvar COOKING = 1;\nvar FIREMAKING = 1;\nvar WOODCUTTING = 1;\n\nvar CONSTRUCTION = 1;\nvar AGILITY = 1;\nvar HERBLORE = 1;\nvar THIEVING = 1;\nvar FLETCH = 1;\nvar SLAYER = 1;\nvar HUNTER = 1;\nvar FARMING = 1;\n\n```\n\n## Quest Order Format\n\n```javascript\n\n```","collection":"project","data":{"id":7,"layout":"../../layouts/theme/mdx.astro","title":"RSPS","client":"Self","frontpage":true,"publishDate":"2020-03-02T00:00:00.000Z","img":"https://images.unsplash.com/photo-1662072628456-325410cf83dc?fit=crop&w=1400&h=700&q=75","description":"Project RSPS is a cluster of different projects with the objective to make a MMORPG farm.","tags":["design","dev","branding"],"repo":"kbve/api.kbve.com"}}]