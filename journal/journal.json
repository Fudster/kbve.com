[{"id":"asset.md","slug":"asset","body":"\n## J5\n\nGoing to split the branches up and then start a dev-asset-automation branch, where the n8n will commit automated commits/pushes.\nThe goal should be that all automation data mining goes through the branches, just to make sure everything is correct and to avoid any possible exploits/mal-intent.\n\n## J4\n\nI am thinking that we should construct abstract Scenes for assets, so that we can reference each aspect of them via modularity / first principle levels. If I wanted to render the assets charts, I should just be able to reference a component for the types of charts and get back what I need, rendered and compressed. We can start with simple charts and then expand them with more style, options and information. Starting with chart0 being the most basic and then we re-do/re-build as we move up from chart1 to chart9, ect...\n\nI guess the question would be how far we would want to expand the charts at the static level and then when should we start to integrate dynamic data endpoints to the charts. I believe that should be handled after we get the backtraced charts out of the way.\n\n## J3\n\n- Stripping out the extra information, such as option contract data, forward PE, RSI, ect...\n- Short hand titles might be a future issue as we scale out from 100 assets to 1000, 10000, 100K\n- International stocks also have additional tags that might cause duplication, I think the best move would be to modify them manually until we can get a better system in place?\n\n## J2\n\n- h0lybyte: I was able to pull 100 assets, format them into json. However, I was running into an issue when turning the json list of assets into MD files.\n- h0lybyte: In the n8n pipeline, the charts / img data gets stripped out.\n\n## J1\n\n- h0lybyte: Open Issue [#88](https://github.com/KBVE/kbve.com/issues/88)\n  - We will expand the amount of stock assets to around 100 and then do some data mining / data parsing for the 100~ assets as a test case. We might also expand a bit of the crypto. I was thinking it might be best to do a couple initially by hand, to see how we can build out & map out the total automation process , which will include fetching / updating.\n  - Basic pipeline would look like this: `n8n -> function_asset -> fx{var: ticker} -> .json -> .md -> gist`\n","collection":"journal","data":{"title":"Asset Dev Log","description":"Dev Log for Asset Page of KBVE!","tags":["asset"],"author":"KBVE Team","img":"https://images.unsplash.com/photo-1610993302487-6dbfc0acf4ed?fit=crop&w=1400&h=700&q=75"}},{"id":"roguejester.md","slug":"roguejester","body":"\n## Steamworks\n\nI was looking through the notes and they recommend that we use SteaMworks SDK 1.53 aka Release 20.1.0\n\nFrom SteamWorks Github IO [Install](https://steamworks.github.io/installation/#unity-instructions)\n\nThey stated three options, A, B and C. I think we should go with Option A?\n\nOption A: .unitypackage\nDownload the .unitypackage from the Releases page on GitHub.\nImport everything into your project\n[Release](https://github.com/rlabrecque/Steamworks.NET/releases)\n\nSo I will grab the unitypackage and then proceed to import it.\n\nI wonder if I will need to apply to the Steam store to get an API key? Hmm.\n\nAs we wait, I will update the pipeline for the Windows build.\n\nSteam Store [Docs](https://partner.steamgames.com/doc/store)\n\nAfter reviewing the scopes that they provide, we are building the `demo` , just need to confirm that with external people.\n\n## Player Global Values\n\nOriginal as of 1.2.x\n\n```c#\nusing System.Collections;\nusing System.Collections.Generic;\nusing Unity.FPS.Game;\nusing UnityEngine;\n\npublic class GlobalValue : MonoBehaviour\n{\n    public static int PickPlayerID {\n        get { return PlayerPrefs.GetInt(\"PickPlayerID\", 0); }\n        set { PlayerPrefs.SetInt(\"PickPlayerID\", value); }\n    }\n    \n    public static int SavedCoins\n    {\n        get { return PlayerPrefs.GetInt(\"Coins\", 0); }\n        set\n        {\n            PlayerPrefs.SetInt(\"Coins\", value);\n        }\n    }\n\n    public static float SavedCurrentExp\n    {\n        get { return PlayerPrefs.GetFloat(\"CurrentEXP\", 10); }\n        set\n        {\n            PlayerPrefs.SetFloat(\"CurrentEXP\", value);\n        }\n    }\n\n    public static int PlayerLevel\n    {\n        get { return PlayerPrefs.GetInt(\"PlayerLevel\", 1); }\n        set\n        {\n            PlayerPrefs.SetInt(\"PlayerLevel\", value);\n        }\n    }\n\n    public static float MaxHp\n    {\n        get { return PlayerPrefs.GetFloat(\"PlayerMaxHp\", 100); }\n        set\n        {\n            PlayerPrefs.SetFloat(\"PlayerMaxHp\", value);\n        }\n    }\n\n}\n```\n\nI am thinking we can add these to the PlayerPrefs\n\n```c#\n\n    public static string PlayerName {\n        get {   return PlayerPrefs.GetString(\"PlayerName\", \"Guest\");   }\n        set {   PlayerPrefs.SetString(\"PlayerName\", value);   }\n    }\n\n```\n\nCan you do nested functions?\n\n```c#\n\n    public static string _pN {\n        get { return PlayerName(); }\n        set { PlayerName(); }\n    }\n\n```\n\nI will test case these tonight, when I get a chance to mess around with after the main branch builds.\n\nOkay so I went ahead and added a couple more things to the `GlobalValue.cs` file:\n\nLets start with the PlayerName, PlayerJWT and PlayerEmail\n\n```c#\n    public static string PlayerName {\n        get {   return PlayerPrefs.GetString(\"PlayerName\", \"Guest\");   }\n        set {   PlayerPrefs.SetString(\"PlayerName\", value);   }\n    }\n\n    public static string PlayerJWT {\n        get {   return PlayerPrefs.GetString(\"PlayerJWT\", \"Guest\");   }\n        set {   PlayerPrefs.SetString(\"PlayerJWT\", value);   }\n    }\n\n    public static string PlayerEmail {\n        get {   return PlayerPrefs.GetString(\"PlayerEmail\", \"Guest\");   }\n        set {   PlayerPrefs.SetString(\"PlayerEmail\", value);   }\n    }\n```\n\nSo would we call them like this?\n\n```c#\n//1\nGlobalValue.PlayerJWT.Set(\"JWTHere\");\n\n//2\nGlobalValue.PlayerJWT = \"JWTHere\";\n\n//3\nGlobalValue.PlayerJWT.set(\"JWTHere?\");\n\n```\n\nNow I am thinking it might be `//2` based upon what the other references to GlobalValue, so I suppose we could try.\n\nI will also change the `PlayerName` function to `PlayerUsername` , to keep within the naming flow.\n\nAlso do we need to call `PlayerPrefs.Save();`? Does GlobalValue already do that?\n\n## J7\n\nWe decided to remove almost all of the Unity MicroFPS codebase and introduced Opsive controller / inventory system.\n\nThe reason we decided to switch over is because it will speed up development and resolve some of the cosmetic / physics / animation / logic issues that we are currently facing.\n\nI believe majority of this week will be spent on focusing on integrating both Opsive plugins into the game. Thus all of Patch 1.2.x will be towards getting everything for the player done.\n\n## Error inside the GameManager\n\nSo we were working on the pipeline, durning the development hell that is Unity, and ran into a \"Build\" success but a \"Build and Run\" failure.\nWe spent some time re-merging the base, switching branches, thinking it might be a cluster of different issues.\nSilver comes in clutch and finds out that there was a `duplicate on GameManager Prefab Replacer , 2 of the same script on same object`.\n\n## J6\n\n- Had an issue with the basing earlier in the day. We will split the branches further, to avoid conflicts and issues when rebasing / merging branches.\n- When migrating from the public to private repo, there were some issues with `secrets` and CI/CD, these issues are still open and should be resolved this week.\n\n## J5\n\n- 11/15/2022\n- Had an issue with the basing earlier in the day. We will split the branches further, to avoid conflicts and issues when rebasing / merging branches.\n- When migrating from the public to private repo, there were some issues with `secrets` and CI/CD, these issues are still open and should be resolved this week.\n\n## J4\n\n- 11/14/2022\n  - Improving the UI/UX\n  - Expanding Character Stats\n\n## Patch 1.2.x\n\n- 11/13/2022\n  - Start expanding the assets inside the game and work with some core logic.\n\n## Patch 1.1\n\n- 11/12/2022\n  - ZaneRage and h0lybyte did the basics the idea / concept.\n  - New asset models for the 3D robot soldiers.\n  - Added several more assets to the game!\n\n## First Official Entry\n\nWe should make it so that the Unity pulls this information and displays it onto the Menu -> Patch.\n","collection":"journal","data":{"title":"RogueJester Dev Log","description":"The lack luster dev log for RJ! Here we keep our journal entries / notes.","tags":["rj"],"author":"KBVE Team","img":"https://images.unsplash.com/photo-1610993302487-6dbfc0acf4ed?fit=crop&w=1400&h=700&q=75"}},{"id":"visualnovel.md","slug":"visualnovel","body":"\n\n## J2\n\nh0lybyte: Okay we got the pipeline operational, even unicorned Github a couple times but it looks like it should be smooth sailing for the time being. I did spend way too much time failing on understanding the github error logs, I should practice carefully reading through the error logs and search them with better abstraction layers.\n\njohn: Added some generic player controls and a generic loading screen, to help us see what version we are currently operating in.\n\n## J1\n\nh0lybyte: Okay so on VC we were talking about the type of Unity version for the engine? I am not too sure what we wanted to do. So I went ahead and looked at the LTS release, found here -> [Unity LTS](https://unity3d.com/unity/qa/lts-releases)\n\nIt seems that the latest Unity version release was November 2022 and it is `Unity 2021.3.14f1`.\n\nGoing to build the repo , which will be public and located [here](https://github.com/kbve/2dunity/)\n\nFor the .gitignore, we did the basic unity template that Github provided, there might have be additional files added later down the line.\n\nGeneric ReadMe was also auto-generated, but we can replace that later down the line.\n\nYaml for the generic WebGL\n\n## Init\n\nThis is the first journal entry for the 2DUnity concept/engine and it is meant to be a base project for Game Jams.\n","collection":"journal","data":{"title":"Visual Novel DevLog","description":"Visual Novel Dev Log","tags":["visual","novel","vn"],"author":"KBVE Team","img":"https://images.unsplash.com/photo-1610993302487-6dbfc0acf4ed?fit=crop&w=1400&h=700&q=75"}}]